version: '3.8'
services:
  user-service-db:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=user_service_db
    ports:
      - '5432:5432'
    volumes:
      - ./config/postgres/user-service-init.sql:/docker-entrypoint-initdb.d/init.sql
  
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - '5001:3000'
    environment:
      - USER_SERVICE_DB_HOST=user-service-db
      - USER_SERVICE_DB_PORT=5432
      - USER_SERVICE_DB_NAME=user_service_db
      - USER_SERVICE_DB_USER=admin
      - USER_SERVICE_DB_PASSWORD=password
    depends_on:
      - user-service-db

  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    ports:
      - '5002:3000'
    environment:
      - USER_SERVICE_URL=http://user-service:3000
      - PAYMENT_SERVICE_URL=http://payment-service:3000

  payment-service:
    build:
      context: ./payment-service
      dockerfile: Dockerfile
    ports:
      - '5003:3000'
      
  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./config/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      # - ./config/grafana-dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      # - ./dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
    ports:
      - "3000:3000"

  tempo:
    image: grafana/tempo:latest
    command: "--config.file=/etc/tempo.yaml"
    volumes:
      - ./config/tempo.yaml:/etc/tempo.yaml
    ports:
      - "3200:3200"

  prometheus:
    image: prom/prometheus
    command: "--config.file=/etc/prometheus.yaml"
    volumes:
      - ./config/prometheus.yaml:/etc/prometheus.yaml
    ports:
      - "9090:9090"
  
  loki:
    image: grafana/loki:2.8.0
    ports:
      - "3100:3100"
    command: "-config.file=/etc/loki/local-config.yaml"
    volumes:
      - ./config/loki-config.yaml:/etc/loki/local-config.yaml
  
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: [ --config=/etc/otel-collector-config.yaml ]
    volumes:
      - ./config/otel-collector-config.yaml:/etc/otel-collector-config.yaml
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 1888:1888 # pprof extension
      - 8888:8888 # Prometheus metrics exposed by the collector
      - 8889:8889 # Prometheus exporter metrics
      - 13133:13133 # health_check extension
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP http receiver
      - 55679:55679 # zpages extension
    depends_on:
      - prometheus
      - tempo
      - loki
      - grafana

  socat:
     image: bpack/socat
     command: TCP4-LISTEN:2375,fork,reuseaddr UNIX-CONNECT:/var/run/docker.sock
     volumes:
        - /var/run/docker.sock:/var/run/docker.sock
     expose:
        - "2375"